package com.Wsdl2Code.WebServices.CTwalkService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 11/23/2015 2:51:36 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class User implements KvmSerializable {
    
    public int Age;
    public boolean AgeSpecified;
    public int Children;
    public boolean ChildrenSpecified;
    public int CityId;
    public boolean CityIdSpecified;
    public int CountryId;
    public boolean CountryIdSpecified;
    public String Email;
    public boolean Enabled;
    public boolean EnabledSpecified;
    public String FacebookId;
    public String FirstName;
    public boolean Gender;
    public boolean GenderSpecified;
    public String GoogleId;
    public String LastName;
    public String LastSeen;
    public boolean LastSeenSpecified;
    public int NumberOfSearches;
    public boolean NumberOfSearchesSpecified;
    public int NumberOfWalks;
    public boolean NumberOfWalksSpecified;
    public String Password;
    public int UserId;
    public boolean UserIdSpecified;
    
    public User(){}
    
    public User(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Age"))
        {
            Object obj = soapObject.getProperty("Age");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                Age = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                Age = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AgeSpecified"))
        {
            Object obj = soapObject.getProperty("AgeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                AgeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                AgeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Children"))
        {
            Object obj = soapObject.getProperty("Children");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                Children = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                Children = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ChildrenSpecified"))
        {
            Object obj = soapObject.getProperty("ChildrenSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ChildrenSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                ChildrenSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("CityId"))
        {
            Object obj = soapObject.getProperty("CityId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                CityId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                CityId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CityIdSpecified"))
        {
            Object obj = soapObject.getProperty("CityIdSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                CityIdSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                CityIdSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("CountryId"))
        {
            Object obj = soapObject.getProperty("CountryId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                CountryId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                CountryId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CountryIdSpecified"))
        {
            Object obj = soapObject.getProperty("CountryIdSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                CountryIdSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                CountryIdSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Email"))
        {
            Object obj = soapObject.getProperty("Email");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                Email = j.toString();
            }else if (obj!= null && obj instanceof String){
                Email = (String) obj;
            }
        }
        if (soapObject.hasProperty("Enabled"))
        {
            Object obj = soapObject.getProperty("Enabled");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                Enabled = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                Enabled = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("EnabledSpecified"))
        {
            Object obj = soapObject.getProperty("EnabledSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                EnabledSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                EnabledSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FacebookId"))
        {
            Object obj = soapObject.getProperty("FacebookId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                FacebookId = j.toString();
            }else if (obj!= null && obj instanceof String){
                FacebookId = (String) obj;
            }
        }
        if (soapObject.hasProperty("FirstName"))
        {
            Object obj = soapObject.getProperty("FirstName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                FirstName = j.toString();
            }else if (obj!= null && obj instanceof String){
                FirstName = (String) obj;
            }
        }
        if (soapObject.hasProperty("Gender"))
        {
            Object obj = soapObject.getProperty("Gender");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                Gender = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                Gender = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("GenderSpecified"))
        {
            Object obj = soapObject.getProperty("GenderSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                GenderSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                GenderSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("GoogleId"))
        {
            Object obj = soapObject.getProperty("GoogleId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                GoogleId = j.toString();
            }else if (obj!= null && obj instanceof String){
                GoogleId = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastName"))
        {
            Object obj = soapObject.getProperty("LastName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                LastName = j.toString();
            }else if (obj!= null && obj instanceof String){
                LastName = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastSeen"))
        {
            Object obj = soapObject.getProperty("LastSeen");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                LastSeen = j.toString();
            }else if (obj!= null && obj instanceof String){
                LastSeen = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastSeenSpecified"))
        {
            Object obj = soapObject.getProperty("LastSeenSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                LastSeenSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                LastSeenSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("NumberOfSearches"))
        {
            Object obj = soapObject.getProperty("NumberOfSearches");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                NumberOfSearches = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                NumberOfSearches = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("NumberOfSearchesSpecified"))
        {
            Object obj = soapObject.getProperty("NumberOfSearchesSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                NumberOfSearchesSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                NumberOfSearchesSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("NumberOfWalks"))
        {
            Object obj = soapObject.getProperty("NumberOfWalks");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                NumberOfWalks = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                NumberOfWalks = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("NumberOfWalksSpecified"))
        {
            Object obj = soapObject.getProperty("NumberOfWalksSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                NumberOfWalksSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                NumberOfWalksSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Password"))
        {
            Object obj = soapObject.getProperty("Password");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                Password = j.toString();
            }else if (obj!= null && obj instanceof String){
                Password = (String) obj;
            }
        }
        if (soapObject.hasProperty("UserId"))
        {
            Object obj = soapObject.getProperty("UserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                UserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                UserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("UserIdSpecified"))
        {
            Object obj = soapObject.getProperty("UserIdSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                UserIdSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                UserIdSpecified = (Boolean) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return Age;
            case 1:
                return AgeSpecified;
            case 2:
                return Children;
            case 3:
                return ChildrenSpecified;
            case 4:
                return CityId;
            case 5:
                return CityIdSpecified;
            case 6:
                return CountryId;
            case 7:
                return CountryIdSpecified;
            case 8:
                return Email;
            case 9:
                return Enabled;
            case 10:
                return EnabledSpecified;
            case 11:
                return FacebookId;
            case 12:
                return FirstName;
            case 13:
                return Gender;
            case 14:
                return GenderSpecified;
            case 15:
                return GoogleId;
            case 16:
                return LastName;
            case 17:
                return LastSeen;
            case 18:
                return LastSeenSpecified;
            case 19:
                return NumberOfSearches;
            case 20:
                return NumberOfSearchesSpecified;
            case 21:
                return NumberOfWalks;
            case 22:
                return NumberOfWalksSpecified;
            case 23:
                return Password;
            case 24:
                return UserId;
            case 25:
                return UserIdSpecified;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 26;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Age";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AgeSpecified";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Children";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ChildrenSpecified";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CityId";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CityIdSpecified";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CountryId";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CountryIdSpecified";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Email";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Enabled";
                break;
            case 10:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "EnabledSpecified";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FacebookId";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FirstName";
                break;
            case 13:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Gender";
                break;
            case 14:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "GenderSpecified";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "GoogleId";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastName";
                break;
            case 17:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastSeen";
                break;
            case 18:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "LastSeenSpecified";
                break;
            case 19:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "NumberOfSearches";
                break;
            case 20:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "NumberOfSearchesSpecified";
                break;
            case 21:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "NumberOfWalks";
                break;
            case 22:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "NumberOfWalksSpecified";
                break;
            case 23:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Password";
                break;
            case 24:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "UserId";
                break;
            case 25:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "UserIdSpecified";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
