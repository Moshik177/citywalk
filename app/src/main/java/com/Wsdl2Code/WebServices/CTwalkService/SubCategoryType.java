package com.Wsdl2Code.WebServices.CTwalkService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 11/23/2015 2:51:36 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class SubCategoryType implements KvmSerializable {
    
    public int ID;
    public boolean IDSpecified;
    public String Icon;
    public String Name;
    public int SubCategoryID;
    public boolean SubCategoryIDSpecified;
    
    public SubCategoryType(){}
    
    public SubCategoryType(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("ID"))
        {
            Object obj = soapObject.getProperty("ID");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ID = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                ID = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IDSpecified"))
        {
            Object obj = soapObject.getProperty("IDSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                IDSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                IDSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Icon"))
        {
            Object obj = soapObject.getProperty("Icon");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                Icon = j.toString();
            }else if (obj!= null && obj instanceof String){
                Icon = (String) obj;
            }
        }
        if (soapObject.hasProperty("Name"))
        {
            Object obj = soapObject.getProperty("Name");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                Name = j.toString();
            }else if (obj!= null && obj instanceof String){
                Name = (String) obj;
            }
        }
        if (soapObject.hasProperty("SubCategoryID"))
        {
            Object obj = soapObject.getProperty("SubCategoryID");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                SubCategoryID = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                SubCategoryID = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SubCategoryIDSpecified"))
        {
            Object obj = soapObject.getProperty("SubCategoryIDSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                SubCategoryIDSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                SubCategoryIDSpecified = (Boolean) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return ID;
            case 1:
                return IDSpecified;
            case 2:
                return Icon;
            case 3:
                return Name;
            case 4:
                return SubCategoryID;
            case 5:
                return SubCategoryIDSpecified;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 6;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ID";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IDSpecified";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Icon";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Name";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SubCategoryID";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "SubCategoryIDSpecified";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
